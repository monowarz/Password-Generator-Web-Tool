<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Strong Password Generator</title>
  <link rel="icon" type="image/x-icon" href="https://blogger.googleusercontent.com/img/a/AVvXsEhJPJEBEkqw5b0kIioqSedvLRp0haeDlmRB4IpdKmgzhq5ht786UMvgF2b8rcJ_2eBMBXIvfbACsHJZTA-gxTczhdvD2HkdScVqpOKQAoM9fn-CFrLRE4WadDc3udP7C4VqC4XaJRz77ZMiFCMNlf7DZzx5D0mpfc15Rq59n9YbtEHLkdDcEC1FaJTy">
    <link rel="stylesheet" href="style.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Montserrat">
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.2/css/all.min.css">
    <link rel="stylesheet" href="https://unpkg.com/swiper/swiper-bundle.min.css"/>
<!-- ===== Fontawesome CDN Link ===== -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"/>
	<style>
		* {
    margin: 0;
    padding: 0;
    -webkit-box-sizing: border-box;
            box-sizing: border-box;
  }
  

  body {
    width: 100%;
    height: 100%;
    background-image: -webkit-gradient(linear, left bottom, left top, color-stop(100%, #209cff), color-stop(200%, #68e0cf));
    background-image: linear-gradient(to top, #209cff 100%, #68e0cf 200%);
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
  }
   
      .sticky-ads{ 
position: fixed; 
bottom: 0; left: 0; 
width: 100%; min-height: 70px; max-height: 200px; 
padding: 5px 0; 
box-shadow: 0 -6px 18px 0 rgba(9,32,76,.1); 
-webkit-transition: all .1s ease-in; transition: all .1s ease-in; 
display: flex; 
align-items: center; 
justify-content: center; 
background-color: #fefefe; z-index: 20; } 

.sticky-ads-close { 
width: 30px; height: 30px; 
display: flex; 
align-items: center; 
justify-content: center; 
border-radius: 12px 0 0; 
position: absolute; right: 0; top: -30px; 
background-color: #fefefe; 
box-shadow: 0 -6px 18px 0 rgba(9,32,76,.08); } 

.sticky-ads .sticky-ads-close svg { width: 22px; height: 22px; fill: #000; } .sticky-ads .sticky-ads-content { overflow: hidden; display: block; position: relative; height: 70px; width: 100%; margin-right: 10px; margin-left: 10px; }
  
  button {
    border: 0;
    outline: 0;
  }
  
  .container {
    margin: 40px 0;
    width: 400px;
    height: 600px;
    padding: 10px 25px;
    background: #0a0e31;
    border-radius: 10px;
    -webkit-box-shadow: 0 0 5px rgba(0, 0, 0, 0.45), 0 4px 8px rgba(0, 0, 0, 0.35), 0 8px 12px rgba(0, 0, 0, 0.15);
            box-shadow: 0 0 5px rgba(0, 0, 0, 0.45), 0 4px 8px rgba(0, 0, 0, 0.35), 0 8px 12px rgba(0, 0, 0, 0.15);
    font-family: "Montserrat";
    display: flex;
    justify-content: center;
    flex-direction: column;
  }
  
  .container h2.title {
    font-size: 1.75rem;
    margin: 10px -5px;
    margin-bottom: 30px;
    color: #fff;
  }
  .rahul{
      display: flex;
      justify-content: center;
  }
  
  .result {
    position: relative;
    width: 100%;
    height: 65px;
    overflow: hidden;
  }
  
  .result__info {
    position: absolute;
    bottom: 4px;
    color: #fff;
    font-size: 0.8rem;
    -webkit-transition: all 150ms ease-in-out;
    transition: all 150ms ease-in-out;
    -webkit-transform: translateY(200%);
            transform: translateY(200%);
    opacity: 0;
  }
  
  .result__info.right {
    right: 8px;
  }
  
  .result__info.left {
    left: 8px;
  }
  
  .result__viewbox {
    width: 100%;
    height: 100%;
    background: rgba(255, 255, 255, 0.08);
    border-radius: 8px;
    color: #fff;
    text-align: center;
    line-height: 65px;
  }
  
  .result #copy-btn {
    position: absolute;
    top: var(--y);
    left: var(--x);
    width: 38px;
    height: 38px;
    background: #fff;
    border-radius: 50%;
    opacity: 0;
    -webkit-transform: translate(-50%, -50%) scale(0);
            transform: translate(-50%, -50%) scale(0);
    -webkit-transition: all 350ms cubic-bezier(0.175, 0.885, 0.32, 1.275);
    transition: all 350ms cubic-bezier(0.175, 0.885, 0.32, 1.275);
    cursor: pointer;
    z-index: 2;
  }
  
  .result #copy-btn:active {
    -webkit-box-shadow: 0 0 0 200px rgba(255, 255, 255, 0.08);
            box-shadow: 0 0 0 200px rgba(255, 255, 255, 0.08);
  }
  
  .result:hover #copy-btn {
    opacity: 1;
    -webkit-transform: translate(-50%, -50%) scale(1.35);
            transform: translate(-50%, -50%) scale(1.35);
  }
  
  .field-title {
    position: absolute;
    top: -10px;
    left: 8px;
    -webkit-transform: translateY(-50%);
            transform: translateY(-50%);
    font-weight: 800;
    color: rgba(255, 255, 255, 0.5);
    text-transform: uppercase;
    font-size: 0.65rem;
    pointer-events: none;
    -webkit-user-select: none;
       -moz-user-select: none;
        -ms-user-select: none;
            user-select: none;
  }
  
  .options {
    width: 100%;
    height: auto;
    margin: 50px 0;
  }
  
  .range__slider {
    position: relative;
    width: 100%;
    height: calc(65px - 10px);
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    background: rgba(255, 255, 255, 0.08);
    border-radius: 8px;
    margin: 30px 0;
  }
  
  .range__slider::before, .range__slider::after {
    position: absolute;
    color: #fff;
    font-size: 0.9rem;
    font-weight: bold;
  }
  
  .range__slider::before {
    content: attr(data-min);
    left: 10px;
  }
  
  .range__slider::after {
    content: attr(data-max);
    right: 10px;
  }
  
  .range__slider .length__title::after {
    content: attr(data-length);
    position: absolute;
    right: -16px;
    font-variant-numeric: tabular-nums;
    color: #fff;
  }
  
  #slider {
    -webkit-appearance: none;
    width: calc(100% - (70px));
    height: 2px;
    border-radius: 5px;
    background: rgba(255, 255, 255, 0.314);
    outline: none;
    padding: 0;
    margin: 0;
    cursor: pointer;
  }
  
  #slider::-webkit-slider-thumb {
    -webkit-appearance: none;
    width: 20px;
    height: 20px;
    border-radius: 50%;
    background: white;
    cursor: pointer;
    -webkit-transition: all 0.15s ease-in-out;
    transition: all 0.15s ease-in-out;
  }
  
  #slider::-webkit-slider-thumb:hover {
    background: #d4d4d4;
    -webkit-transform: scale(1.2);
            transform: scale(1.2);
  }
  
  #slider::-moz-range-thumb {
    width: 20px;
    height: 20px;
    border: 0;
    border-radius: 50%;
    background: white;
    cursor: pointer;
    -webkit-transition: background 0.15s ease-in-out;
    transition: background 0.15s ease-in-out;
  }
  
  #slider::-moz-range-thumb:hover {
    background: #d4d4d4;
  }
  
  .settings {
    position: relative;
    height: auto;
    widows: 100%;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
  }
  
  .settings .setting {
    position: relative;
    width: 100%;
    height: calc(65px - 10px);
    background: rgba(255, 255, 255, 0.08);
    border-radius: 8px;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    padding: 10px 25px;
    color: #fff;
    margin-bottom: 8px;
  }
  
  .settings .setting input {
    opacity: 0;
    position: absolute;
  }
  
  .settings .setting input + label {
    -webkit-user-select: none;
       -moz-user-select: none;
        -ms-user-select: none;
            user-select: none;
  }
  
  .settings .setting input + label::before, .settings .setting input + label::after {
    content: "";
    position: absolute;
    -webkit-transition: 150ms cubic-bezier(0.24, 0, 0.5, 1);
    transition: 150ms cubic-bezier(0.24, 0, 0.5, 1);
    -webkit-transform: translateY(-50%);
            transform: translateY(-50%);
    top: 50%;
    right: 10px;
    cursor: pointer;
  }
  
  .settings .setting input + label::before {
    height: 30px;
    width: 50px;
    border-radius: 30px;
    background: rgba(214, 214, 214, 0.434);
  }
  
  .settings .setting input + label::after {
    height: 24px;
    width: 24px;
    border-radius: 60px;
    right: 32px;
    background: #fff;
  }
  
  .settings .setting input:checked + label:before {
    background: #5d68e2;
    -webkit-transition: all 150ms cubic-bezier(0, 0, 0, 0.1);
    transition: all 150ms cubic-bezier(0, 0, 0, 0.1);
  }
  
  .settings .setting input:checked + label:after {
    right: 14px;
  }
  
  .settings .setting input:focus + label:before {
    -webkit-box-shadow: 0 0 0 2px rgba(255, 255, 255, 0.75);
            box-shadow: 0 0 0 2px rgba(255, 255, 255, 0.75);
  }

 
  
  .btn.generate {
    -webkit-user-select: none;
       -moz-user-select: none;
        -ms-user-select: none;
            user-select: none;
    position: relative;
    width: 100%;
    height: 50px;
    margin: 10px 0;
    border-radius: 8px;
    color: #fff;
    border: none;
    background-image: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    letter-spacing: 1px;
    font-weight: bold;
    text-transform: uppercase;
    cursor: pointer;
    -webkit-transition: all 150ms ease;
    transition: all 150ms ease;
  }
  
  .btn.generate:active {
    -webkit-transform: translateY(-3%);
            transform: translateY(-3%);
    -webkit-box-shadow: 0 4px 8px rgba(255, 255, 255, 0.08);
            box-shadow: 0 4px 8px rgba(255, 255, 255, 0.08);
  }
  /*# sourceMappingURL=style.css.map */
  .support{
	position: fixed;
	right: 10px;
	bottom: 10px;
	padding: 10px;
	display: flex;
   
}
p {
    text-align: center;
    font-weight: bold;
    margin-bottom: 2rem;
}
a{
	margin: 0 20px;
	color: linear-gradient(90deg, rgba(2,0,36,1) 0%, rgba(45,1,47,1) 6%, rgba(97,9,121,1) 46%, rgba(106,33,255,1) 61%, rgba(7,68,245,1) 96%, rgba(28,82,93,1) 100%);
	font-size: 2rem;
	transition: all 400ms ease;
}

a:hover{
	color: #222;
}
.everything{
    width: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

.containerwidth {
    width: 100%;
}

.wrapper {
    background-color: #ffffff;
    padding: 10px 20px;
    margin-bottom: 20px;
    border-radius: 5px;
    -webkit-box-shadow: 0 15px 25px rgba(0, 0, 50, 0.2);
    box-shadow: 0 15px 25px rgba(0, 0, 50, 0.2);
}

.toggle,
.content {
    font-family: "Poppins", sans-serif;
}

.toggle {
    width: 100%;
    background-color: transparent;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: justify;
    -ms-flex-pack: justify;
    justify-content: space-between;
    font-size: 16px;
    color: #111130;
    font-weight: 600;
    border: none;
    outline: none;
    cursor: pointer;
    padding: 10px 0;
}
.content {
    position: relative;
    font-size: 14px;
    text-align: justify;
    line-height: 30px;
    height: 0;
    overflow: hidden;
    -webkit-transition: all 1s;
    -o-transition: all 1s;
    transition: all 1s;
}

.fixed-leftSd,.fixed-rightSd{position:fixed;top:60px;width:160px;height:600px;z-index:9999;transform:translateZ(0)}
.fixed-leftSd{left:0}
.fixed-rightSd{right:0}
.close-fixedSd{position:absolute;width:160px;height:15px;line-height:15px;font-size:11px;font-weight:400;top:-15px;left:0;text-align:center;background:#e0e0e0;color:#666;padding:5px 0;cursor:pointer}
@media screen and (max-width:800px){.fixed-leftSd,.fixed-rightSd{display:none;visibility:hidden;}}

	</style>
</head>

<body>
	
		
	<div class="everything">

		
		<div class="rahul">
			<div class="container">
				<h2 class="title">Password Generator</h2>
				<div class="result">
					<div class="result__title field-title">Generated Password</div>
					<div class="result__info right">click to copy</div>
					<div class="result__info left">copied</div>
					<div class="result__viewbox" id="result">CLICK GENERATE</div>
					<button id="copy-btn" style="--x: 0; --y: 0"><i class="fa fa-clone"></i></button>
				</div>
				<div class="length range__slider" data-min="4" data-max="32">
					<div class="length__title field-title" data-length='0'>length:</div>
					<input id="slider" type="range" min="4" max="32" value="16" />
				</div>
		
				<div class="settings">
					<span class="settings__title field-title">settings</span>
					<div class="setting">
						<input type="checkbox" id="uppercase" checked />
						<label for="uppercase">Include Uppercase</label>
					</div>
					<div class="setting">
						<input type="checkbox" id="lowercase" checked />
						<label for="lowercase">Include Lowercase</label>
					</div>
					<div class="setting">
						<input type="checkbox" id="number" checked />
						<label for="number">Include Numbers</label>
					</div>
					<div class="setting">
						<input type="checkbox" id="symbol" />
						<label for="symbol">Include Symbols</label>
					</div>
				</div>
		
				<button class="btn generate" id="generate">Generate Password</button>
			</div>
			<div class="support">
				<a href="https://www.monowar.eu.org" target="_blank"><i class="fa fa-home"></i></a>
			</div>
		
		</div>
			<p>Copyright © 2022 - All Right Reserved.</p>
		<div class="boxaccordion">
			<div class="containerwidth">
				<div class="wrapper">
					<button class="toggle">Strong Password Generator ?<i class="fas fa-plus icon"></i></button>
					<div class="content">
<li> Customize policies to meet the unique password requirements of different websites.</li>
 
<li> Generate strong passwords using secure technology with built-in randomness.</li>
 
<li> Integrate with password managers such as Dashlane to create, manage and easily use all  strong passwords.</li>
					</div>
				</div>
				<div class="wrapper">
					<button class="toggle">About Password Generator ?<i class="fas fa-plus icon"></i></button>
					<div class="content">
	<li>A password generator is a tool that automatically generates a password based on guidelines that you set to create strong and unpredictable passwords for each of your accounts.</li>
					</div>
				</div>
				<div class="wrapper">
					<button class="toggle">Privacy & Policy For Password Generator<i class="fas fa-plus icon"></i></button>
					<div class="content">
						<a href="https://www.privacypolicygenerator.info/live.php?token=oJ1r8tqTtDWEM5ssNPTdDGwhLhAbu2EG">Privacy Policy</a>
					</div>
				</div>
			</div>
		</div>
	</div>



    <script>// This is a simple Password Generator App that will generate random password maybe you can you them to secure your account.
		// I tried my best to make the code as simple as possible please dont mind the variable names.
		// Also this idea came in my mind after checking Traversy Media's latest video.
		
		// Clear the concole on every refresh
		console.clear();
		// set the body to full height
		// document.body.style.height = `${innerHeight}px`
		
		// Range Slider Properties.
		// Fill : The trailing color that you see when you drag the slider.
		// background : Default Range Slider Background
		const sliderProps = {
			fill: "#0B1EDF",
			background: "rgba(255, 255, 255, 0.214)",
		};
		
		// Selecting the Range Slider container which will effect the LENGTH property of the password.
		const slider = document.querySelector(".range__slider");
		
		// Text which will show the value of the range slider.
		const sliderValue = document.querySelector(".length__title");
		
		// Using Event Listener to apply the fill and also change the value of the text.
		slider.querySelector("input").addEventListener("input", event => {
			sliderValue.setAttribute("data-length", event.target.value);
			applyFill(event.target);
		});
		// Selecting the range input and passing it in the applyFill func.
		applyFill(slider.querySelector("input"));
		// This function is responsible to create the trailing color and setting the fill.
		function applyFill(slider) {
			const percentage = (100 * (slider.value - slider.min)) / (slider.max - slider.min);
			const bg = `linear-gradient(90deg, ${sliderProps.fill} ${percentage}%, ${sliderProps.background} ${percentage +
					0.1}%)`;
			slider.style.background = bg;
			sliderValue.setAttribute("data-length", slider.value);
		}
		
		// Object of all the function names that we will use to create random letters of password
		const randomFunc = {
			lower: getRandomLower,
			upper: getRandomUpper,
			number: getRandomNumber,
			symbol: getRandomSymbol,
		};
		
		// Random more secure value
		function secureMathRandom() {
			return window.crypto.getRandomValues(new Uint32Array(1))[0] / (Math.pow(2, 32) - 1);
		}
		
		// Generator Functions
		// All the functions that are responsible to return a random value taht we will use to create password.
		function getRandomLower() {
			return String.fromCharCode(Math.floor(Math.random() * 26) + 97);
		}
		function getRandomUpper() {
			return String.fromCharCode(Math.floor(Math.random() * 26) + 65);
		}
		function getRandomNumber() {
			return String.fromCharCode(Math.floor(secureMathRandom() * 10) + 48);
		}
		function getRandomSymbol() {
			const symbols = '~!@#$%^&*()_+{}":?><;.,';
			return symbols[Math.floor(Math.random() * symbols.length)];
		}
		
		// Selecting all the DOM Elements that are necessary -->
		
		// The Viewbox where the result will be shown
		const resultEl = document.getElementById("result");
		// The input slider, will use to change the length of the password
		const lengthEl = document.getElementById("slider");
		
		// Checkboxes representing the options that is responsible to create differnt type of password based on user
		const uppercaseEl = document.getElementById("uppercase");
		const lowercaseEl = document.getElementById("lowercase");
		const numberEl = document.getElementById("number");
		const symbolEl = document.getElementById("symbol");
		
		// Button to generate the password
		const generateBtn = document.getElementById("generate");
		// Button to copy the text
		const copyBtn = document.getElementById("copy-btn");
		// Result viewbox container
		const resultContainer = document.querySelector(".result");
		// Text info showed after generate button is clicked
		const copyInfo = document.querySelector(".result__info.right");
		// Text appear after copy button is clicked
		const copiedInfo = document.querySelector(".result__info.left");
		
		// if this variable is trye only then the copyBtn will appear, i.e. when the user first click generate the copyBth will interact.
		let generatedPassword = false;
		
		// Update Css Props of the COPY button
		// Getting the bounds of the result viewbox container
		let resultContainerBound = {
			left: resultContainer.getBoundingClientRect().left,
			top: resultContainer.getBoundingClientRect().top,
		};
		// This will update the position of the copy button based on mouse Position
		resultContainer.addEventListener("mousemove", e => {
			resultContainerBound = {
				left: resultContainer.getBoundingClientRect().left,
				top: resultContainer.getBoundingClientRect().top,
			};
			if(generatedPassword){
				copyBtn.style.opacity = '1';
				copyBtn.style.pointerEvents = 'all';
				copyBtn.style.setProperty("--x", `${e.x - resultContainerBound.left}px`);
				copyBtn.style.setProperty("--y", `${e.y - resultContainerBound.top}px`);
			}else{
				copyBtn.style.opacity = '0';
				copyBtn.style.pointerEvents = 'none';
			}
		});
		window.addEventListener("resize", e => {
			resultContainerBound = {
				left: resultContainer.getBoundingClientRect().left,
				top: resultContainer.getBoundingClientRect().top,
			};
		});
		
		// Copy Password in clipboard
		copyBtn.addEventListener("click", () => {
			const textarea = document.createElement("textarea");
			const password = resultEl.innerText;
			if (!password || password == "CLICK GENERATE") {
				return;
			}
			textarea.value = password;
			document.body.appendChild(textarea);
			textarea.select();
			document.execCommand("copy");
			textarea.remove();
		
			copyInfo.style.transform = "translateY(200%)";
			copyInfo.style.opacity = "0";
			copiedInfo.style.transform = "translateY(0%)";
			copiedInfo.style.opacity = "0.75";
		});
		
		// When Generate is clicked Password id generated.
		generateBtn.addEventListener("click", () => {
			const length = +lengthEl.value;
			const hasLower = lowercaseEl.checked;
			const hasUpper = uppercaseEl.checked;
			const hasNumber = numberEl.checked;
			const hasSymbol = symbolEl.checked;
			generatedPassword = true;
			resultEl.innerText = generatePassword(length, hasLower, hasUpper, hasNumber, hasSymbol);
			copyInfo.style.transform = "translateY(0%)";
			copyInfo.style.opacity = "0.75";
			copiedInfo.style.transform = "translateY(200%)";
			copiedInfo.style.opacity = "0";
		});
		
		// Function responsible to generate password and then returning it.
		function generatePassword(length, lower, upper, number, symbol) {
			let generatedPassword = "";
			const typesCount = lower + upper + number + symbol;
			const typesArr = [{ lower }, { upper }, { number }, { symbol }].filter(item => Object.values(item)[0]);
			if (typesCount === 0) {
				return "";
			}
			for (let i = 0; i < length; i++) {
				typesArr.forEach(type => {
					const funcName = Object.keys(type)[0];
					generatedPassword += randomFunc[funcName]();
				});
			}
			return generatedPassword.slice(0, length);
		}
		
		// function that handles the checkboxes state, so at least one needs to be selected. The last checkbox will be disabled.
		function disableOnlyCheckbox(){
			let totalChecked = [uppercaseEl, lowercaseEl, numberEl, symbolEl].filter(el => el.checked)
			totalChecked.forEach(el => {
				if(totalChecked.length == 1){
					el.disabled = true;
				}else{
					el.disabled = false;
				}
			})
		}
		
		[uppercaseEl, lowercaseEl, numberEl, symbolEl].forEach(el => {
			el.addEventListener('click', () => {
				disableOnlyCheckbox()
			})
		})</script>
		
		<script>
			//<![CDATA[
		  let toggles = document.getElementsByClassName("toggle");
		  let contentDiv = document.getElementsByClassName("content");
		  let icons = document.getElementsByClassName("icon");
  
		  for (let i = 0; i < toggles.length; i++) {
			  toggles[i].addEventListener("click", () => {
				  if (parseInt(contentDiv[i].style.height) != contentDiv[i].scrollHeight) {
					  contentDiv[i].style.height = contentDiv[i].scrollHeight + "px";
					  toggles[i].style.color = "#0084e9";
					  icons[i].classList.remove("fa-plus");
					  icons[i].classList.add("fa-minus");
				  } else {
					  contentDiv[i].style.height = "0px";
					  toggles[i].style.color = "#111130";
					  icons[i].classList.remove("fa-minus");
					  icons[i].classList.add("fa-plus");
				  }
  
				  for (let j = 0; j < contentDiv.length; j++) {
					  if (j !== i) {
						  contentDiv[j].style.height = 0;
						  toggles[j].style.color = "#111130";
						  icons[j].classList.remove("fa-minus");
						  icons[j].classList.add("fa-plus");
					  }
				  }
			  });
		  }
  //]]>
	  </script>
  
</div>
</body>
</html>